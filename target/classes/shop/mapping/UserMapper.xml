<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shop.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="shop.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="statusId" property="statusid" jdbcType="VARCHAR" />
    <result column="truename" property="truename" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="usertype2" property="usertype2" jdbcType="INTEGER" />
    <result column="usertype1" property="usertype1" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userName, password, email, phone, statusId, truename, sex, birthday, usertype2, 
    usertype1
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jd_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jd_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="shop.model.User" >
    insert into jd_user (id, userName, password, 
      email, phone, statusId, 
      truename, sex, birthday, 
      usertype2, usertype1)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{statusid,jdbcType=VARCHAR}, 
      #{truename,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{usertype2,jdbcType=INTEGER}, #{usertype1,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="shop.model.User" >
    insert into jd_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="statusid != null" >
        statusId,
      </if>
      <if test="truename != null" >
        truename,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="usertype2 != null" >
        usertype2,
      </if>
      <if test="usertype1 != null" >
        usertype1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusid != null" >
        #{statusid,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="usertype2 != null" >
        #{usertype2,jdbcType=INTEGER},
      </if>
      <if test="usertype1 != null" >
        #{usertype1,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="shop.model.User" >
    update jd_user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusid != null" >
        statusId = #{statusid,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="usertype2 != null" >
        usertype2 = #{usertype2,jdbcType=INTEGER},
      </if>
      <if test="usertype1 != null" >
        usertype1 = #{usertype1,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="shop.model.User" >
    update jd_user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      statusId = #{statusid,jdbcType=VARCHAR},
      truename = #{truename,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      usertype2 = #{usertype2,jdbcType=INTEGER},
      usertype1 = #{usertype1,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="findPassWordByUserName" resultType="java.lang.String" parameterType="java.lang.String" >
    select 
    password
    from jd_user
    where userName  = #{username}
  </select>
  <select id="selectIdByUserName" resultType="int" parameterType="java.lang.String" >
    select 
    id
    from jd_user
    where userName  = #{username}
  </select>
  
  
</mapper>