<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shop.dao.BigtypeMapper" >
  <resultMap id="BaseResultMap" type="shop.model.Bigtype" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="proPic" property="propic" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, remarks, proPic
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jd_bigtype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jd_bigtype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="shop.model.Bigtype" >
    insert into jd_bigtype (id, name, remarks, 
      proPic)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{propic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="shop.model.Bigtype" >
    insert into jd_bigtype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="propic != null" >
        proPic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="propic != null" >
        #{propic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="shop.model.Bigtype" >
    update jd_bigtype
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="propic != null" >
        proPic = #{propic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="shop.model.Bigtype" >
    update jd_bigtype
    set name = #{name,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      proPic = #{propic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap type="shop.model.Bigtype" id="bigTypeResultMap" extends="BaseResultMap">
  	<collection property="smallTypeList" ofType="shop.model.Smalltype">
  		<id column="sid" property="id" jdbcType="INTEGER" />
	    <result column="sname" property="name" jdbcType="VARCHAR" />
	    <result column="sbigtypeid" property="bigtypeid" jdbcType="INTEGER" />
	    <result column="sremarks" property="remarks" jdbcType="VARCHAR" />
  	</collection>
  	<collection property="goods" column="id" javaType="list" select="selectToptenGoods"></collection>
  </resultMap>
  <select id="selectToptenGoods" resultType="shop.model.Goods" parameterType="java.lang.Integer" >
   select id,name,price,proPic from jd_goods where bigTypeId=#{id} order by id desc limit 0,10 
  </select> 
  <select id="findAll" resultMap="bigTypeResultMap">
  	SELECT
	jd_bigtype.name,
	jd_bigtype.remarks,
	jd_bigtype.proPic,
	jd_smalltype.id sid,
	jd_smalltype.name sname,
	jd_smalltype.remarks sremarks,
	jd_bigtype.id id ,
	jd_smalltype.bigTypeId sbigtypeid
	FROM
	jd_bigtype ,
	jd_smalltype
	WHERE
	jd_smalltype.bigTypeId = jd_bigtype.id 
  </select>
</mapper>